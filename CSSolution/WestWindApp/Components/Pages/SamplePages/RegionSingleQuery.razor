@page "/singlequery"
<PageTitle>Single Query</PageTitle>
@rendermode InteractiveServer

<!-- additional namespaces-->
@using WestWindSystem.BLL;
@using WestWindSystem.Entities;

<h1>Region Query</h1>
<h4>... single record query</h4>

@if (feedBackMsg.Length > 0)
{
    <div class="alert alert-info">
        <p>@feedBackMsg</p>
    </div>
}

@if (errorMsgs.Count > 0)
{
    <div class="alert alert-danger">
        <p>Please fix the following issues:</p>
        <ul>
            @foreach (var error in errorMsgs)
            {
                <li>@error</li>
            }
        </ul>
    </div>
}


<!-- create the form for the query-->
@*
    form area
    standard html controls
    use bootstrap for formating
    form will be two column
*@

<div class="row">
    <div class="col-md-6">
        <!-- this column will hold the query input controls and buttons-->
        <p><strong>Input query controls and values</strong></p>

        <label for="regionid">Enter a region id:</label>&nbsp;&nbsp;
        <input id="regionid" type="number" @bind="entryarg"
               placeholder="enter id" style="width:100px;" />&nbsp;&nbsp;
        <button type="submit" @onclick="GetByEntry"
            class="btn btn-outline-secondary rounded-pill">
            Fetch By Entry
        </button>
        <br/><br/>
        <label for="selectid">Select a region:</label>&nbsp;&nbsp;
        <select id="selectid" @bind="selectarg" style="width:100px">
            <option value="0">... select</option>
            @foreach(var item in regionList)
            {
                <option value="@item.RegionID">@item.RegionDescription</option>
            }
        </select>&nbsp;&nbsp;
        <button type="submit" @onclick="GetBySelection"
                class="btn btn-outline-secondary rounded-pill">
            Fetch By Selection
        </button>

    </div>
    <div class="col-md-6">
        <!-- this column will hold the query result output
        no output attempt will be done unless the page actaully
        has something to display
        -->
        <p>Results of the query</p>
        <br /><br />
        @if (region != null)
        {
            <p>Region ID: @region.RegionID</p>

            <br />
            <p>Region Description: @region.RegionDescription</p>
        }
    </div>
</div>
@code {
    private string feedBackMsg = "";
    private List<string> errorMsgs = new List<string>();

    //input variables for binding
    private int entryarg = 0;
    private int selectarg = 0;

    //injection of Region services
    [Inject]
    private RegionServices _regionServices { get; set; }
    private List<Region> regionList = new List<Region>(); //cannot be null as the loop
                                                          //      in the select
                                                          //      must exist even if empty

    //output variable for display
    private Region region = null;

    protected override void OnInitialized()
    {
        //consume a service (aka method)
        regionList = _regionServices.Region_GetAll();
        base.OnInitialized();
    }

    private void GetByEntry()
    {
        
    }

    private void GetBySelection()
    {

    }
}
